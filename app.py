import numpy as npfrom tensorflow.keras.applications.imagenet_utils import preprocess_input, decode_predictionsfrom tensorflow.keras.models import load_modelfrom tensorflow.keras.preprocessing import image from flask import Flask, redirect, url_for, request, render_templatefrom werkzeug.utils import secure_filenameimport osimport globimport re# define flask appapp = Flask(__name__)#load modelmodel_path = 'vgg19.h5'model = load_model(model_path)model.make_predict_function()#preprocessingdef model_predict(img_path,model):    img = image.load_img(img_path,target_size=(224,224))    #preprocessing    x = image.img_to_array(img)    x = np.expand_dims(x,axis=0)    x = preprocess_input(x)    pred = model.predict(x)    return pred @app.route('/', methods=['GET'])def index():    return render_template('index.html')@app.route('/predict', methods=['GET', 'POST'])def upload():    if request.method == "POST":        #Get the file from the post        f=request.files['file']        basepath = os.path.dirname(__file__)        file_path = os.path.join(basepath,'uploads',secure_filename(f.filename))        f.save(file_path)        #predict        pred = model_predict(file_path,model)        #decode        pred_class = decode_predictions(pred,top=1)        res = str(pred_class[0][0][1])        return res     return Noneif __name__ == '__main__':    app.run(port=5001)    app.run(debug=True)    